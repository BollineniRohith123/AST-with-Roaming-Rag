(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
    typeof define === 'function' && define.amd ? define(['exports'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.emnapi = {}));
})(this, (function (exports) {
    /******************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise, SuppressedError, Symbol, Iterator */

    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };

    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
        var e = new Error(message);
        return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
    };

    var externalValue = new WeakMap();
    /** @public */
    function isExternal(object) {
        return externalValue.has(object);
    }
    /** @public */ // eslint-disable-next-line @typescript-eslint/no-redeclare
    var External = (function () {
        function External(value) {
            Object.setPrototypeOf(this, null);
            externalValue.set(this, value);
        }
        External.prototype = null;
        return External;
    })();
    /** @public */
    function getExternalValue(external) {
        if (!isExternal(external)) {
            throw new TypeError('not external');
        }
        return externalValue.get(external);
    }

    var supportNewFunction = /*#__PURE__*/ (function () {
        var f;
        try {
            f = new Function();
        }
        catch (_) {
            return false;
        }
        return typeof f === 'function';
    })();
    var _global = /*#__PURE__*/ (function () {
        if (typeof globalThis !== 'undefined')
            return globalThis;
        var g = (function () { return this; })();
        if (!g && supportNewFunction) {
            try {
                g = new Function('return this')();
            }
            catch (_) { }
        }
        if (!g) {
            if (typeof __webpack_public_path__ === 'undefined') {
                if (typeof global !== 'undefined')
                    return global;
            }
            if (typeof window !== 'undefined')
                return window;
            if (typeof self !== 'undefined')
                return self;
        }
        return g;
    })();
    var TryCatch = /*#__PURE__*/ (function () {
        function TryCatch() {
            this._exception = undefined;
            this._caught = false;
        }
        TryCatch.prototype.isEmpty = function () {
            return !this._caught;
        };
        TryCatch.prototype.hasCaught = function () {
            return this._caught;
        };
        TryCatch.prototype.exception = function () {
            return this._exception;
        };
        TryCatch.prototype.setError = function (err) {
            this._caught = true;
            this._exception = err;
        };
        TryCatch.prototype.reset = function () {
            this._caught = false;
            this._exception = undefined;
        };
        TryCatch.prototype.extractException = function () {
            var e = this._exception;
            this.reset();
            return e;
        };
        return TryCatch;
    }());
    var canSetFunctionName = /*#__PURE__*/ (function () {
        var _a;
        try {
            return Boolean((_a = Object.getOwnPropertyDescriptor(Function.prototype, 'name')) === null || _a === void 0 ? void 0 : _a.configurable);
        }
        catch (_) {
            return false;
        }
    })();
    var supportReflect = typeof Reflect === 'object';
    var supportFinalizer = (typeof FinalizationRegistry !== 'undefined') && (typeof WeakRef !== 'undefined');
    var supportWeakSymbol = /*#__PURE__*/ (function () {
        try {
            // eslint-disable-next-line symbol-description
            var sym = Symbol();
            // eslint-disable-next-line no-new
            new WeakRef(sym);
            new WeakMap().set(sym, undefined);
        }
        catch (_) {
            return false;
        }
        return true;
    })();
    var supportBigInt = typeof BigInt !== 'undefined';
    function isReferenceType(v) {
        return (typeof v === 'object' && v !== null) || typeof v === 'function';
    }
    var _require = /*#__PURE__*/ (function () {
        var nativeRequire;
        if (typeof __webpack_public_path__ !== 'undefined') {
            nativeRequire = (function () {
                return typeof __non_webpack_require__ !== 'undefined' ? __non_webpack_require__ : undefined;
            })();
        }
        else {
            nativeRequire = (function () {
                return typeof __webpack_public_path__ !== 'undefined' ? (typeof __non_webpack_require__ !== 'undefined' ? __non_webpack_require__ : undefined) : (typeof require !== 'undefined' ? require : undefined);
            })();
        }
        return nativeRequire;
    })();
    var _MessageChannel = typeof MessageChannel === 'function'
        ? MessageChannel
        : /*#__PURE__*/ (function () {
            try {
                return _require('worker_threads').MessageChannel;
            }
            catch (_) { }
            return undefined;
        })();
    var _setImmediate = typeof setImmediate === 'function'
        ? setImmediate
        : function (callback) {
            if (typeof callback !== 'function') {
                throw new TypeError('The "callback" argument must be of type function');
            }
            if (_MessageChannel) {
                var channel_1 = new _MessageChannel();
                channel_1.port1.onmessage = function () {
                    channel_1.port1.onmessage = null;
                    channel_1 = undefined;
                    callback();
                };
                channel_1.port2.postMessage(null);
            }
            else {
                setTimeout(callback, 0);
            }
        };
    var _Buffer = typeof Buffer === 'function'
        ? Buffer
        : /*#__PURE__*/ (function () {
            try {
                return _require('buffer').Buffer;
            }
            catch (_) { }
            return undefined;
        })();
    var version = "1.4.3";
    var NODE_API_SUPPORTED_VERSION_MIN = 1 /* Version.NODE_API_SUPPORTED_VERSION_MIN */;
    var NODE_API_SUPPORTED_VERSION_MAX = 10 /* Version.NODE_API_SUPPORTED_VERSION_MAX */;
    var NAPI_VERSION_EXPERIMENTAL = 2147483647 /* Version.NAPI_VERSION_EXPERIMENTAL */;
    var NODE_API_DEFAULT_MODULE_API_VERSION = 8 /* Version.NODE_API_DEFAULT_MODULE_API_VERSION */;

    var Handle = /*#__PURE__*/ (function () {
        function Handle(id, value) {
            this.id = id;
            this.value = value;
        }
        Handle.prototype.data = function () {
            return getExternalValue(this.value);
        };
        Handle.prototype.isNumber = function () {
            return typeof this.value === 'number';
        };
        Handle.prototype.isBigInt = function () {
            return typeof this.value === 'bigint';
        };
        Handle.prototype.isString = function () {
            return typeof this.value === 'string';
        };
        Handle.prototype.isFunction = function () {
            return typeof this.value === 'function';
        };
        Handle.prototype.isExternal = function () {
            return isExternal(this.value);
        };
        Handle.prototype.isObject = function () {
            return typeof this.value === 'object' && this.value !== null;
        };
        Handle.prototype.isArray = function () {
            return Array.isArray(this.value);
        };
        Handle.prototype.isArrayBuffer = function () {
            return (this.value instanceof ArrayBuffer);
        };
        Handle.prototype.isTypedArray = function () {
            return (ArrayBuffer.isView(this.value)) && !(this.value instanceof DataView);
        };
        Handle.prototype.isBuffer = function (BufferConstructor) {
            if (ArrayBuffer.isView(this.value))
                return true;
            BufferConstructor !== null && BufferConstructor !== void 0 ? BufferConstructor : (BufferConstructor = _Buffer);
            return typeof BufferConstructor === 'function' && BufferConstructor.isBuffer(this.value);
        };
        Handle.prototype.isDataView = function () {
            return (this.value instanceof DataView);
        };
        Handle.prototype.isDate = function () {
            return (this.value instanceof Date);
        };
        Handle.prototype.isPromise = function () {
            return (this.value instanceof Promise);
        };
        Handle.prototype.isBoolean = function () {
            return typeof this.value === 'boolean';
        };
        Handle.prototype.isUndefined = function () {
            return this.value === undefined;
        };
        Handle.prototype.isSymbol = function () {
            return typeof this.value === 'symbol';
        };
        Handle.prototype.isNull = function () {
            return this.value === null;
        };
        Handle.prototype.dispose = function () {
            this.value = undefined;
        };
        return Handle;
    }());
    var ConstHandle = /*#__PURE__*/ (function (_super) {
        __extends(ConstHandle, _super);
        function ConstHandle(id, value) {
            return _super.call(this, id, value) || this;
        }
        ConstHandle.prototype.dispose = function () { };
        return ConstHandle;
    }(Handle));
    var HandleStore = /*#__PURE__*/ (function () {
        function HandleStore() {
            this._values = [
                undefined,
                HandleStore.UNDEFINED,
                HandleStore.NULL,
                HandleStore.FALSE,
                HandleStore.TRUE,
                HandleStore.GLOBAL
            ];
            this._next = HandleStore.MIN_ID;
        }
        HandleStore.prototype.push = function (value) {
            var h;
            var next = this._next;
            var values = this._values;
            if (next < values.length) {
                h = values[next];
                h.value = va